一般线程我们通常使用下面四种方法去实现：
继承Thread
实现Runnable

上面两种太蠢了，下面两种才是正道
实现Callable
线程池

为什么要用线程池呢：
1.降低资源消耗,减少重复创建线程
2.提高相应速度
3.提高线程的可管理性


构造参数理解：

public ThreadPoolExecutor(int corePoolSize,
                          int maximumPoolSize,
                          long keepAliveTime,
                          TimeUnit unit,
                          BlockingQueue<Runnable> workQueue,
                          ThreadFactory threadFactory,
                          RejectedExecutionHandler handler)

corePoolSize 核心线程池大小
maximumPoolSize 线程池最大容量
keepAliveTime 空闲线程可存活时间
TimeUnit 时间单位
workQueue 阻塞队列（见BlockingQueueDemo）
可能还有：
threadFactory 生产线程的工厂类
handle  饱和丢弃策略
        1.AbortPolicy  废弃终止
        2.CallerRunsPolicy 用调用者所在的线程来执行任务
        3.DiscardPolicy 直接丢弃任务
        4.DiscardOldestPolicy 丢弃阻塞队列中靠最前的任务，并执行当前任务

